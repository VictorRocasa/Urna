/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ifsudestemg.View;

import ifsudestemg.Controller.CandidatoController;
import ifsudestemg.Controller.EleicaoController;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author victorPC
 */
public class ViewAtribuirCandidato extends javax.swing.JFrame {
    private CandidatoController candidatoController;
    private DefaultTableModel modelLegenda;
    private DefaultTableModel modelCandidato;
    private boolean candidatos;
    private int idEleicao;
    private int idLegenda;
    private MaskFormatter maskNumero; 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCandidatos = new javax.swing.JTable();
        lblTitulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnListar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnAdicionarRemover = new javax.swing.JButton();
        ftxtNumero = new javax.swing.JFormattedTextField();
        lblNumero = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Urna Online");

        tblCandidatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCandidatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCandidatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCandidatos);

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTitulo.setText("Partidos cadastrados nessa eleição:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );

        btnListar.setText("Listar Candidatos");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar(Eleição)");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnAdicionarRemover.setText("Adicionar");
        btnAdicionarRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarRemoverActionPerformed(evt);
            }
        });

        lblNumero.setText("Número:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTitulo)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnListar)
                            .addComponent(btnVoltar)
                            .addComponent(btnAdicionarRemover)
                            .addComponent(ftxtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNumero))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

        public ViewAtribuirCandidato(int idEleicao) {
        initComponents();
        this.idEleicao = idEleicao;
        this.candidatoController = new CandidatoController();
        preencheTabelaLegendas();
        candidatos = false;
        this.btnAdicionarRemover.setEnabled(false);
        this.ftxtNumero.setEnabled(false);
        this.lblNumero.setEnabled(false);
    }    
        
    private void aplicaMascara(String nPartido){
        try{
            maskNumero = new MaskFormatter(nPartido+"###");
            maskNumero.install(this.ftxtNumero);
        }catch(ParseException ex){
        }
    }

    private void limpaMascara(){
        maskNumero.uninstall();
        this.ftxtNumero.setText("");
    }
    
    public void preencheTabelaLegendas(){
        String[] colunas = {"IDL","Numero do Partido","Nome do Partido"}; 
        modelLegenda = new DefaultTableModel(colunas,0);
        Object[][] dados;
        try {
            dados = candidatoController.retornaDadosLegenda(idEleicao);
            for (Object[] dado : dados) {
                Object[] linha = {dado[0], dado[1], dado[2]};
                modelLegenda.addRow(linha);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Erro ao consultar os registros, tente novamente mais tarde!","Erro!", 0);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewAtribuirCandidato.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.tblCandidatos.setModel(modelLegenda);
        this.tblCandidatos.removeColumn(this.tblCandidatos.getColumnModel().getColumn(0));
    }
    
    public void preencheTabelaCandidatos(){
        String[] colunas = {"IDP","CPF","Numero","Cargo no partido","IDC","Na eleição?"}; 
        modelCandidato = new DefaultTableModel(colunas,0);
        try {
            ArrayList<Object[]> dados = candidatoController.retornaDadosCandidato(this.idLegenda);
            for (int i = 0; i < dados.size(); i++) {
                Object[] linha = {(int) dados.get(i)[0],(""+dados.get(i)[1]),""+dados.get(i)[2],(""+dados.get(i)[3]),(int)dados.get(i)[4],(""+dados.get(i)[5])};
                modelCandidato.addRow(linha);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Erro ao consultar os registros, tente novamente mais tarde!","Erro!", 0);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewAtribuirCandidato.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.tblCandidatos.setModel(modelCandidato);
        this.tblCandidatos.removeColumn(this.tblCandidatos.getColumnModel().getColumn(0));
        this.tblCandidatos.removeColumn(this.tblCandidatos.getColumnModel().getColumn(3));
    }
    
    private void tblCandidatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCandidatosMouseClicked
       if(candidatos){
            int indice = this.tblCandidatos.getSelectedRow();
            if(indice !=-1)
                if(((int)modelCandidato.getValueAt(indice, 4))!=-1){
                    this.btnAdicionarRemover.setText("Remover");
                    this.ftxtNumero.setEnabled(false);
                    this.lblNumero.setEnabled(false);
                }
                else{
                    this.btnAdicionarRemover.setText("Adicionar");
                    this.ftxtNumero.setEnabled(true);
                    this.lblNumero.setEnabled(true);
                }
       }
    }//GEN-LAST:event_tblCandidatosMouseClicked

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
            if(this.candidatos == false){
                int indice = this.tblCandidatos.getSelectedRow();
                if(indice !=-1){
                    this.candidatos = true;
                    this.btnListar.setText("Voltar(Partidos)");
                    this.lblTitulo.setText("Candidatos desse partido nessa eleição:");
                    this.btnAdicionarRemover.setEnabled(true);
                    this.ftxtNumero.setEnabled(true);
                    this.lblNumero.setEnabled(true);
                    this.idLegenda = (int)modelLegenda.getValueAt(indice, 0);
                    aplicaMascara(""+modelLegenda.getValueAt(indice, 1));
                    this.preencheTabelaCandidatos();
                }
                else
                    JOptionPane.showMessageDialog(this,"Aviso, selecione um partido para adicionar à eleição!","Aviso!", 2);
            }
            else{
                this.candidatos = false;
                this.btnListar.setText("Listar Candidatos");
                this.lblTitulo.setText("Partidos cadastrados nessa eleição:");
                this.btnAdicionarRemover.setEnabled(false);
                this.ftxtNumero.setEnabled(false);
                this.lblNumero.setEnabled(false);
                limpaMascara();
                preencheTabelaLegendas();
                this.idLegenda = -1;
            }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
        EleicaoController eleicaoController = new EleicaoController();
        ViewCRUDEleicao viewCRUDEleicao = new ViewCRUDEleicao(eleicaoController);
        viewCRUDEleicao.setVisible(true);        
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAdicionarRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarRemoverActionPerformed
        int indice = this.tblCandidatos.getSelectedRow();
        if(indice !=-1){
            if(((int)modelCandidato.getValueAt(indice, 4)) == -1)
                try {
                    candidatoController.adicionar(this.idLegenda,(int)modelCandidato.getValueAt(indice, 0), Integer.parseInt(this.ftxtNumero.getText().replace(" ", "")));
                    this.btnAdicionarRemover.setText("Remover");
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this,"Erro ao criar o candidato, tente novamente mais tarde!","Erro!", 0);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewAtribuirLegenda.class.getName()).log(Level.SEVERE, null, ex);
            }
            else
                try {
                    candidatoController.excluirPorId((int)modelCandidato.getValueAt(indice, 4));
                    this.btnAdicionarRemover.setText("Adicionar");
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this,"Erro ao remover o candidato, tente novamente mais tarde!","Erro!", 0);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewAtribuirLegenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            this.preencheTabelaCandidatos();
            this.tblCandidatos.setRowSelectionInterval(indice, indice);
        }
        else
            JOptionPane.showMessageDialog(this,"Aviso, selecione um partidario!","Aviso!", 2);
    }//GEN-LAST:event_btnAdicionarRemoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarRemover;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtNumero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblCandidatos;
    // End of variables declaration//GEN-END:variables
}
