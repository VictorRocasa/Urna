/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.EleitorDAO;
import DAO.PartidarioDAO;
import DAO.PartidoDAO;
import Model.Eleitor;
import Model.Partidario;
import Model.Partido;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author victorPC
 */
public class ViewCadastroPartidario extends javax.swing.JFrame {
    private static final ViewCadastroPartidario INSTANCIA = new ViewCadastroPartidario();
    private boolean editar;
    private int id_edicao;
    
    /**
     * Creates new form frCadastroCanditado
     */
    private ViewCadastroPartidario() {
        initComponents();
        
        try{
            MaskFormatter maskCPF = new MaskFormatter("###.###.###.##");
            MaskFormatter maskNumero = new MaskFormatter("##");
            
            maskCPF.install(this.ftxtCPF);
            maskNumero.install(this.ftxtNumero);
        }catch(ParseException ex){
        }
    }
    
    public static ViewCadastroPartidario getInstancia(){
        return INSTANCIA;
    }
    
    public void setModoCriacao(){
        this.limpaCampos();
        editar = false;
        id_edicao = -1;
        this.ftxtCPF.setEditable(true);
    }
    
    public void setModoEdicao(Partidario partidario){
        editar = true;
        id_edicao = partidario.getIdPartidario();
        EleitorDAO eleitorDAO = EleitorDAO.getInstancia();
        Eleitor eleitor = new Eleitor();
        eleitor.setidEleitor(partidario.getIdEleitor());
        eleitor = (Eleitor) eleitorDAO.consulta(eleitor, 1).get(0);
        this.ftxtCPF.setText(eleitor.getCpf());
        this.ftxtCPF.setEditable(false);
        PartidoDAO partidoDAO = PartidoDAO.getInstancia();
        Partido partido = new Partido();
        partido.setIdPartido(partidario.getIdPartido());
        partido = (Partido) partidoDAO.consulta(partido, 1).get(0);
        this.ftxtNumero.setText(""+partido.getNumero());
        this.txtCargo.setText(partidario.getCargoNoPartido());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        lblCargo = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        lblCPF = new javax.swing.JLabel();
        ftxtCPF = new javax.swing.JFormattedTextField();
        ftxtNumero = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eleiçao online");

        lblTitulo.setText("Cadastrar partidário:");

        lblNumero.setText("Número do partido:");

        lblCargo.setText("Cargo no partido:");

        txtCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCargoActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblCPF.setText("CPF:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo)
                            .addComponent(lblNumero)
                            .addComponent(lblCargo))
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCargo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblCPF))
                            .addComponent(ftxtCPF)
                            .addComponent(ftxtNumero))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCargo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
   
    public boolean validarCPF(String cpf){
        if(cpf.length()!=14)
            return false;
        int dig1=0, dig2=0, calc1=0, calc2=0, aux1=10, aux2=11;
        int [] arrayCPF;
        boolean repetido = true;
        arrayCPF = new int[9];
        dig1 = Integer.parseInt(cpf.substring(12,13));
        dig2 = Integer.parseInt(cpf.substring(13,14));
       
        cpf = cpf.substring(0,3) + cpf.substring(4,7) + cpf.substring(8,11);
        for(int i=0; i<arrayCPF.length; i++){
            arrayCPF[i] = Integer.parseInt(cpf.substring(i, i+1));
            
            calc1 += aux1 * arrayCPF[i];
            aux1--;
            calc2 += aux2 * arrayCPF[i];
            aux2--;
            
            if(arrayCPF[0] != arrayCPF[i] && repetido)
                repetido = false;
        }
        calc2 += dig1 * aux2;
        
        calc1 = (calc1 * 10) % 11;
        calc2 = (calc2 * 10) % 11;
        
        if(calc1 == 10)
            calc1 = 0;
        
        if(calc2 == 10)
            calc2 = 0;
                      
        if(calc1 == dig1 && calc2 == dig2 && !repetido)
            return true;
        else
            return false;
    }
    
    
    public boolean validaCampos(){
        String cpf = this.ftxtCPF.getText();
        cpf = cpf.replace(" ", "");
        String numero = this.ftxtNumero.getText();
        numero = numero.replace(" ", "");
        String cargo = this.txtCargo.getText();
        cargo = cargo.replace(" ", "");
        
        if(cpf.equals("...")){
            JOptionPane.showMessageDialog(null, "O cpf não deve ficar em branco!","Erro!", 2);
            return false;
        }
        if(numero.equals("")){
            JOptionPane.showMessageDialog(null, "O campo número não deve ficar em branco!","Erro!", 2);
            return false;
        }
        if(cargo.equals("")){
            JOptionPane.showMessageDialog(null, "O cargo não deve ficar em branco!","Erro!!", 2);
            return false;
        }
        if(!validarCPF(cpf)){
            JOptionPane.showMessageDialog(null, "cpf inválido!","Erro!", 2);
            return false;
        }
        if(!numero.matches("[0-9]{2,5}")){
            JOptionPane.showMessageDialog(null, "Número inválido!","Erro!", 2);
            return false;
        }
        if(!cargo.matches("[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]{3,}")){
            JOptionPane.showMessageDialog(null, "Cargo inválido!","Erro!!", 2);
            return false;
        }
        return true;
    }
    
    private void limpaCampos() {
        this.ftxtCPF.setText("");
        this.ftxtNumero.setText("");
        this.txtCargo.setText("");
    }
    
    private void txtCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
        ViewDebug viewDebug = ViewDebug.getInstancia();
        viewDebug.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        if(!this.validaCampos())
            return;
        PartidarioDAO partidarioDAO = PartidarioDAO.getInstancia();
        Partidario partidario = new Partidario();
        ArrayList<Object> retorno;
        if(!editar){
            Eleitor eleitor = new Eleitor();
            eleitor.setCpf(this.ftxtCPF.getText());
            EleitorDAO eleitorDAO = EleitorDAO.getInstancia();
            retorno = eleitorDAO.consulta(eleitor, 4);
            if(retorno==null)
                return;
            if(retorno.isEmpty()){
                JOptionPane.showMessageDialog(null,"CPF não cadastrado no sistema!","Erro!", 2);  
                return;
            }
            eleitor = (Eleitor) retorno.get(0);
            partidario.setIdEleitor(eleitor.getidEleitorr());
            retorno = partidarioDAO.consulta(partidario, 2);
            if(retorno==null)
                return;
            if(!retorno.isEmpty()){
                JOptionPane.showMessageDialog(null,"Partidário com esse CPF já cadastrado no sistema!","Erro!", 2);  
                return;
            }
        }
        Partido partido = new Partido();
        partido.setNumero(Integer.parseInt(this.ftxtNumero.getText()));
        PartidoDAO partidoDAO = PartidoDAO.getInstancia();
        retorno = partidoDAO.consulta(partido, 2);
        if(retorno==null)
            return;
        if(retorno.isEmpty()){
            JOptionPane.showMessageDialog(null,"Partido inexistente!","Erro!", 2);  
            return;
        }
        partido = (Partido)retorno.get(0);
        partidario.setIdPartido(partido.getIdPartido());
        partidario.setCargoNoPartido(this.txtCargo.getText());
        if(editar){
            partidario.setIdPartidario(id_edicao);
            if(partidarioDAO.altera(partidario)){
                ViewCRUDPartidario viewCRUDPartidario = ViewCRUDPartidario.getInstancia();
                viewCRUDPartidario.preencheTabela();
                JOptionPane.showMessageDialog(null,"Cadastro alterado com sucesso.","Sucesso!", 1);
                this.dispose();
                viewCRUDPartidario.setVisible(true);
            }
        }
        else
            if(partidarioDAO.adiciona(partidario)){
                this.limpaCampos();
                Object[] options = {"Sim", "Não"};
                if(JOptionPane.showOptionDialog(null, "Cadastro realizado com sucesso! Deseja realizar outro cadastro?","Sucesso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]) == 0)
                    return;
                else{
                    this.limpaCampos();
                    ViewCRUDPartidario viewCRUDPartidario = ViewCRUDPartidario.getInstancia();
                    viewCRUDPartidario.preencheTabela();
                    this.dispose();
                    viewCRUDPartidario.setVisible(true);
                }
            }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtCPF;
    private javax.swing.JFormattedTextField ftxtNumero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtCargo;
    // End of variables declaration//GEN-END:variables

}
